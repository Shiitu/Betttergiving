{"ast":null,"code":"import{useEffect,useState}from\"react\";import axios from\"axios\";export default function useGetBlogs(initial){const[blogs,setBlogs]=useState(initial);useEffect(()=>{const fetchBlogs=async()=>{const res=await axios({method:\"get\",url:\"http://localhost:5000/api/blogs\"});if(res.data.success===true){setBlogs(res.data.Blogs);console.log(res.data.Blogs);}else{alert(\"Could not get blogs\");}};fetchBlogs();},[]);return[blogs,setBlogs];}","map":{"version":3,"names":["useEffect","useState","axios","useGetBlogs","initial","blogs","setBlogs","fetchBlogs","res","method","url","data","success","Blogs","console","log","alert"],"sources":["/Users/shubhamkumar/Desktop/Better/src/hooks/useGetBlogs.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n\nexport default function useGetBlogs (initial) {\n    const [blogs, setBlogs] = useState(initial)\n\n    useEffect(() => {\n        const fetchBlogs = async() => {\n            const res = await axios({\n                method : \"get\",\n                url : \"http://localhost:5000/api/blogs\"\n            })\n            if (res.data.success === true) {\n                setBlogs(res.data.Blogs)\n                console.log(res.data.Blogs)\n            }\n            else {\n                alert(\"Could not get blogs\")\n            }\n        }\n\n        fetchBlogs()\n    }, [])\n\n    return [blogs, setBlogs]\n}"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,cAAe,SAAS,CAAAC,WAAWA,CAAEC,OAAO,CAAE,CAC1C,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAACG,OAAO,CAAC,CAE3CJ,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAO,UAAU,CAAG,KAAAA,CAAA,GAAW,CAC1B,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAN,KAAK,CAAC,CACpBO,MAAM,CAAG,KAAK,CACdC,GAAG,CAAG,iCACV,CAAC,CAAC,CACF,GAAIF,GAAG,CAACG,IAAI,CAACC,OAAO,GAAK,IAAI,CAAE,CAC3BN,QAAQ,CAACE,GAAG,CAACG,IAAI,CAACE,KAAK,CAAC,CACxBC,OAAO,CAACC,GAAG,CAACP,GAAG,CAACG,IAAI,CAACE,KAAK,CAAC,CAC/B,CAAC,IACI,CACDG,KAAK,CAAC,qBAAqB,CAAC,CAChC,CACJ,CAAC,CAEDT,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACF,KAAK,CAAEC,QAAQ,CAAC,CAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}